{
  "title": "Циклы",
  "content": [
    {
      "type": "text",
      "value": "Для **производительности** в критичных местах используйте обычные `for/while`\n\nДля **читаемости** в обработке коллекций — `forEach`, `forEachIndexed`, `repeat`."
    },
    {
      "type": "text",
      "value": "- `for` Перебор диапазонов, коллекций, массивов"
    },
    {
      "type": "code",
      "language": "kotlin",
      "value": "for (i in 1..5)"
    },
    {
      "type": "text",
      "value": "- `while` Когда условие зависит от изменяемой переменной"
    },
    {
      "type": "code",
      "language": "kotlin",
      "value": "while (x < 10)"
    },
    {
      "type": "text",
      "value": "- `do-while` Если нужно выполнить цикл хотя бы 1 раз"
    },
    {
      "type": "code",
      "language": "kotlin",
      "value": "do { ... } while (x != 0)"
    },
    {
      "type": "text",
      "value": "- `forEach`, `forEachIndexed` Функциональный стиль для коллекций"
    },
    {
      "type": "code",
      "language": "kotlin",
      "value": "list.forEach { }"
    },
    {
      "type": "text",
      "value": "- `repeat` Повторение действия N раз"
    },
    {
      "type": "code",
      "language": "kotlin",
      "value": "repeat(3) { }"
    },
    {
      "type": "text",
      "value": "#### Управление циклами"
    },
    {
      "type": "text",
      "value": "- `break` — досрочный выход из цикла"
    },
    {
      "type": "code",
      "language": "kotlin",
      "value": "for (i in 1..10) {\n    if (i == 5) break\n    println(i)  // 1, 2, 3, 4\n}"
    },
    {
      "type": "text",
      "value": "- `continue` — пропуск текущей итерации"
    },
    {
      "type": "code",
      "language": "kotlin",
      "value": "for (i in 1..5) {\n    if (i == 3) continue\n    println(i)  // 1, 2, 4, 5\n}"
    },
    {
      "type": "text",
      "value": "- `Метки (label)` для вложенных циклов"
    },
    {
      "type": "code",
      "language": "kotlin",
      "value": "outerLoop@ for (i in 1..3) {\n    for (j in 1..3) {\n        if (i == 2 && j == 2) break@outerLoop\n        println(\"i=$i, j=$j\")  // Прервётся при i=2, j=2\n    }\n}"
    }
  ]
}