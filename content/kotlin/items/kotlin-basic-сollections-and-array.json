{
  "title": "Коллекции и массивы (Collections and Array)",
  "content": [
    {
      "type": "text",
      "value": "Различия между **массивами** и **коллекциями**"
    },
    {
      "type": "code",
      "language": "kotlin",
      "value": "Критерий\t    Массивы (Array)\t         Коллекции (List, Set, Map)\nРазмер\t            Фиксированный\t         Динамический (кроме List)\nИзменяемость\t    Да (элементы)\t         Зависит от типа (Mutable/не Mutable)\nПроизводительность  Быстрее (особенно IntArray)\t Гибче, но может быть медленнее\nNull-безопасность   Да (если Array<T?>)\t         Да (если List<T?>)"
    },
    {
      "type": "text",
      "value": "Когда использовать **массивы**?\n\n - Высокая производительность (например, в математических вычислениях).\n\n - Фиксированный размер данных (известен заранее).\n\n - Работа с примитивами (IntArray, DoubleArray эффективнее, чем List<Int>)"
    },
    {
      "type": "code",
      "language": "kotlin",
      "value": "val temperatures = DoubleArray(365) // Данные датчика за год (фиксированный размер)"
    },
    {
      "type": "text",
      "value": "Когда использовать **коллекции**?\n\n- Гибкость (добавление, удаление, изменение размера).\n\n- Богатый функционал (фильтрация, сортировка, группировка).\n\n- Работа с объектами (строки, классы, nullable-типы)."
    },
    {
      "type": "code",
      "language": "kotlin",
      "value": "val users = mutableListOf(\"Alice\", \"Bob\") // Динамический список\nusers.add(\"Charlie\") // Добавление элемента"
    },
    {
      "type": "text",
      "value": "Преобразования между **массивами** и **списками**"
    },
    {
      "type": "code",
      "language": "kotlin",
      "value": "// Массив → Список\nval array = arrayOf(1, 2, 3)\nval list = array.toList()          // [1, 2, 3]\n\n// Список → Массив\nval newArray = list.toTypedArray() // Array<Int>"
    },
    {
      "type": "text",
      "value": "Для **Android/Kotlin Multiplatform** чаще используют **коллекции**.\n\nВ высоконагруженных алгоритмах (например, игры) — **массивы**."
    },
    {
      "type": "text",
      "value": "В большинстве Kotlin-проектов предпочитают коллекции из-за удобства, а массивы используют в оптимизированном коде (например, математические библиотеки)."
    },
    {
      "type": "text",
      "value": "#### Неизменяемая коллекция vs Массив в Kotlin"
    },
    {
      "type": "text",
      "value": "**Неизменяемая коллекция (List, Set)**:\n\n- **Изменение элементов:**    Запрещено (полная неизменяемость)\n\n- **Типы данных:**                    Только объекты (примитивы автоматически боксятся)\n\n- **Производительность:**\t  Медленнее (из-за бокса примитивов)\n\n- **API и методы:**                    Богатый функционал (map, filter, sorted)"
    },
    {
      "type": "text",
      "value": "**Массив (Array, IntArray)**:\n\n- **Изменение элементов:**    Элементы можно менять (array[0] = 5)\n\n- **Типы данных:**                    Могут хранить примитивы (IntArray) и объекты\n\n- **Производительность:**\t  Быстрее (особенно IntArray, DoubleArray)\n\n- **API и методы:**                    олько базовые операции (size, get, set)"
    }
  ]
}